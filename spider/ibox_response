function i(e, t) {
    t = !!t;
    for (var r = e.length, n = new Uint8Array(t ? 4 * r : r), i = 0, o = 0; i < r; i++) {
        var a = e.charCodeAt(i);
        if (t && 55296 <= a && a <= 56319) {
            if (++i >= r)
                throw new Error("Malformed string, low surrogate expected at position " + i);
            a = (55296 ^ a) << 10 | 65536 | 56320 ^ e.charCodeAt(i)
        } else if (!t && a >>> 8)
            throw new Error("Wide characters are not allowed.");
        !t || a <= 127 ? n[o++] = a : a <= 2047 ? (n[o++] = 192 | a >> 6,
            n[o++] = 128 | 63 & a) : a <= 65535 ? (n[o++] = 224 | a >> 12,
            n[o++] = 128 | a >> 6 & 63,
            n[o++] = 128 | 63 & a) : (n[o++] = 240 | a >> 18,
            n[o++] = 128 | a >> 12 & 63,
            n[o++] = 128 | a >> 6 & 63,
            n[o++] = 128 | 63 & a)
    }
    return n.subarray(0, o)
}

function o(e) {
    var t = e.length;
    1 & t && (e = "0" + e,
        t++);
    for (var r = new Uint8Array(t >> 1), n = 0; n < t; n += 2)
        r[n >> 1] = parseInt(e.substr(n, 2), 16);
    return r
}

function a(e) {
    return i(atob(e))
}

function s(e, t) {
    t = !!t;
    for (var r = e.length, n = new Array(r), i = 0, o = 0; i < r; i++) {
        var a = e[i];
        if (!t || a < 128)
            n[o++] = a;
        else if (a >= 192 && a < 224 && i + 1 < r)
            n[o++] = (31 & a) << 6 | 63 & e[++i];
        else if (a >= 224 && a < 240 && i + 2 < r)
            n[o++] = (15 & a) << 12 | (63 & e[++i]) << 6 | 63 & e[++i];
        else {
            if (!(a >= 240 && a < 248 && i + 3 < r))
                throw new Error("Malformed UTF8 character at byte offset " + i);
            var s = (7 & a) << 18 | (63 & e[++i]) << 12 | (63 & e[++i]) << 6 | 63 & e[++i];
            s <= 65535 ? n[o++] = s : (s ^= 65536,
                n[o++] = 55296 | s >> 10,
                n[o++] = 56320 | 1023 & s)
        }
    }
    var u = "";
    for (i = 0; i < o; i += 16384)
        u += String.fromCharCode.apply(String, n.slice(i, i + 16384 <= o ? i + 16384 : o));
    return u
}

function u(e) {
    for (var t = "", r = 0; r < e.length; r++) {
        var n = (255 & e[r]).toString(16);
        n.length < 2 && (t += "0"),
            t += n
    }
    return t
}

function f(e) {
    return btoa(s(e))
}

function c(e) {
    return e -= 1,
        e |= e >>> 1,
        e |= e >>> 2,
        e |= e >>> 4,
        e |= e >>> 8,
        e |= e >>> 16,
        e += 1
}

function l(e) {
    return "number" == typeof e
}

function d(e) {
    return "string" == typeof e
}

function h(e) {
    return e instanceof ArrayBuffer
}

function _(e) {
    return e instanceof Uint8Array
}

function p(e) {
    return e instanceof Int8Array || e instanceof Uint8Array || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array
}

function E(e, t, r) {
    var n = t ? t.byteLength : r || 65536;
    if (4095 & n || n <= 0)
        throw new Error("heap size must be a positive integer and a multiple of 4096");
    return t = t || new e(new ArrayBuffer(n))
}

function g(e, t, r, n, i) {
    var o = e.length - t
        , a = o < i ? o : i;
    return e.set(r.subarray(n, n + a), t),
        a
}

var y = (() => {
        function e() {
            var e = Error.apply(this, arguments);
            this.message = e.message,
                this.stack = e.stack
        }

        return e.prototype = Object.create(Error.prototype, {
            name: {
                value: "IllegalStateError"
            }
        }),
            e
    }
)()
    , m = (() => {
        function e() {
            var e = Error.apply(this, arguments);
            this.message = e.message,
                this.stack = e.stack
        }

        return e.prototype = Object.create(Error.prototype, {
            name: {
                value: "IllegalArgumentError"
            }
        }),
            e
    }
)()
    , v = (() => {
        function e() {
            var e = Error.apply(this, arguments);
            this.message = e.message,
                this.stack = e.stack
        }

        return e.prototype = Object.create(Error.prototype, {
            name: {
                value: "SecurityError"
            }
        }),
            e
    }
)()
    , S = (() => {
        var e, t, r = !1;

        function n(r, n) {
            var i = e[(t[r] + t[n]) % 255];
            return 0 !== r && 0 !== n || (i = 0),
                i
        }

        var i, o, a, s;

        function u() {
            function u(r) {
                var n, i, o;
                for (i = o = function (r) {
                    var n = e[255 - t[r]];
                    return 0 === r && (n = 0),
                        n
                }(r),
                         n = 0; n < 4; n++)
                    o ^= i = 255 & (i << 1 | i >>> 7);
                return o ^= 99
            }

            r || function () {
                e = [],
                    t = [];
                var n, i, o = 1;
                for (n = 0; n < 255; n++)
                    e[n] = o,
                        i = 128 & o,
                        o <<= 1,
                        o &= 255,
                    128 === i && (o ^= 27),
                        o ^= e[n],
                        t[e[n]] = n;
                e[255] = e[0],
                    t[0] = 0,
                    r = !0
            }(),
                i = [],
                o = [],
                a = [[], [], [], []],
                s = [[], [], [], []];
            for (var f = 0; f < 256; f++) {
                var c = u(f);
                i[f] = c,
                    o[c] = f,
                    a[0][f] = n(2, c) << 24 | c << 16 | c << 8 | n(3, c),
                    s[0][c] = n(14, f) << 24 | n(9, f) << 16 | n(13, f) << 8 | n(11, f);
                for (var l = 1; l < 4; l++)
                    a[l][f] = a[l - 1][f] >>> 8 | a[l - 1][f] << 24,
                        s[l][c] = s[l - 1][c] >>> 8 | s[l - 1][c] << 24
            }
        }

        var f = function (e, t) {
            u();
            var r = new Uint32Array(t);
            r.set(i, 512),
                r.set(o, 768);
            for (var n = 0; n < 4; n++)
                r.set(a[n], 4096 + 1024 * n >> 2),
                    r.set(s[n], 8192 + 1024 * n >> 2);
            var f = function (e, t, r) {
                "use asm";
                var n = 0
                    , i = 0
                    , o = 0
                    , a = 0
                    , s = 0
                    , u = 0
                    , f = 0
                    , c = 0
                    , l = 0
                    , d = 0
                    , h = 0
                    , _ = 0
                    , p = 0
                    , E = 0
                    , g = 0
                    , y = 0
                    , m = 0
                    , v = 0
                    , S = 0
                    , A = 0
                    , T = 0;
                var C = new e.Uint32Array(r)
                    , w = new e.Uint8Array(r);

                function b(e, t, r, s, u, f, c, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    s = s | 0;
                    u = u | 0;
                    f = f | 0;
                    c = c | 0;
                    l = l | 0;
                    var d = 0
                        , h = 0
                        , _ = 0
                        , p = 0
                        , E = 0
                        , g = 0
                        , y = 0
                        , m = 0;
                    d = r | 0x400,
                        h = r | 0x800,
                        _ = r | 0xc00;
                    u = u ^ C[(e | 0) >> 2],
                        f = f ^ C[(e | 4) >> 2],
                        c = c ^ C[(e | 8) >> 2],
                        l = l ^ C[(e | 12) >> 2];
                    for (m = 16; (m | 0) <= s << 4; m = m + 16 | 0) {
                        p = C[(r | u >> 22 & 1020) >> 2] ^ C[(d | f >> 14 & 1020) >> 2] ^ C[(h | c >> 6 & 1020) >> 2] ^ C[(_ | l << 2 & 1020) >> 2] ^ C[(e | m | 0) >> 2],
                            E = C[(r | f >> 22 & 1020) >> 2] ^ C[(d | c >> 14 & 1020) >> 2] ^ C[(h | l >> 6 & 1020) >> 2] ^ C[(_ | u << 2 & 1020) >> 2] ^ C[(e | m | 4) >> 2],
                            g = C[(r | c >> 22 & 1020) >> 2] ^ C[(d | l >> 14 & 1020) >> 2] ^ C[(h | u >> 6 & 1020) >> 2] ^ C[(_ | f << 2 & 1020) >> 2] ^ C[(e | m | 8) >> 2],
                            y = C[(r | l >> 22 & 1020) >> 2] ^ C[(d | u >> 14 & 1020) >> 2] ^ C[(h | f >> 6 & 1020) >> 2] ^ C[(_ | c << 2 & 1020) >> 2] ^ C[(e | m | 12) >> 2];
                        u = p,
                            f = E,
                            c = g,
                            l = y
                    }
                    n = C[(t | u >> 22 & 1020) >> 2] << 24 ^ C[(t | f >> 14 & 1020) >> 2] << 16 ^ C[(t | c >> 6 & 1020) >> 2] << 8 ^ C[(t | l << 2 & 1020) >> 2] ^ C[(e | m | 0) >> 2],
                        i = C[(t | f >> 22 & 1020) >> 2] << 24 ^ C[(t | c >> 14 & 1020) >> 2] << 16 ^ C[(t | l >> 6 & 1020) >> 2] << 8 ^ C[(t | u << 2 & 1020) >> 2] ^ C[(e | m | 4) >> 2],
                        o = C[(t | c >> 22 & 1020) >> 2] << 24 ^ C[(t | l >> 14 & 1020) >> 2] << 16 ^ C[(t | u >> 6 & 1020) >> 2] << 8 ^ C[(t | f << 2 & 1020) >> 2] ^ C[(e | m | 8) >> 2],
                        a = C[(t | l >> 22 & 1020) >> 2] << 24 ^ C[(t | u >> 14 & 1020) >> 2] << 16 ^ C[(t | f >> 6 & 1020) >> 2] << 8 ^ C[(t | c << 2 & 1020) >> 2] ^ C[(e | m | 12) >> 2]
                }

                function O(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    b(0x0000, 0x0800, 0x1000, T, e, t, r, n)
                }

                function I(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    var o = 0;
                    b(0x0400, 0x0c00, 0x2000, T, e, n, r, t);
                    o = i,
                        i = a,
                        a = o
                }

                function R(e, t, r, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    l = l | 0;
                    b(0x0000, 0x0800, 0x1000, T, s ^ e, u ^ t, f ^ r, c ^ l);
                    s = n,
                        u = i,
                        f = o,
                        c = a
                }

                function N(e, t, r, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    l = l | 0;
                    var d = 0;
                    b(0x0400, 0x0c00, 0x2000, T, e, l, r, t);
                    d = i,
                        i = a,
                        a = d;
                    n = n ^ s,
                        i = i ^ u,
                        o = o ^ f,
                        a = a ^ c;
                    s = e,
                        u = t,
                        f = r,
                        c = l
                }

                function D(e, t, r, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    l = l | 0;
                    b(0x0000, 0x0800, 0x1000, T, s, u, f, c);
                    s = n = n ^ e,
                        u = i = i ^ t,
                        f = o = o ^ r,
                        c = a = a ^ l
                }

                function x(e, t, r, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    l = l | 0;
                    b(0x0000, 0x0800, 0x1000, T, s, u, f, c);
                    n = n ^ e,
                        i = i ^ t,
                        o = o ^ r,
                        a = a ^ l;
                    s = e,
                        u = t,
                        f = r,
                        c = l
                }

                function L(e, t, r, l) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    l = l | 0;
                    b(0x0000, 0x0800, 0x1000, T, s, u, f, c);
                    s = n,
                        u = i,
                        f = o,
                        c = a;
                    n = n ^ e,
                        i = i ^ t,
                        o = o ^ r,
                        a = a ^ l
                }

                function M(e, t, r, s) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    s = s | 0;
                    b(0x0000, 0x0800, 0x1000, T, l, d, h, _);
                    _ = ~y & _ | y & _ + 1;
                    h = ~g & h | g & h + ((_ | 0) == 0);
                    d = ~E & d | E & d + ((h | 0) == 0);
                    l = ~p & l | p & l + ((d | 0) == 0);
                    n = n ^ e;
                    i = i ^ t;
                    o = o ^ r;
                    a = a ^ s
                }

                function P(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    var i = 0
                        , o = 0
                        , a = 0
                        , l = 0
                        , d = 0
                        , h = 0
                        , _ = 0
                        , p = 0
                        , E = 0
                        , g = 0;
                    e = e ^ s,
                        t = t ^ u,
                        r = r ^ f,
                        n = n ^ c;
                    i = m | 0,
                        o = v | 0,
                        a = S | 0,
                        l = A | 0;
                    for (; (E | 0) < 128; E = E + 1 | 0) {
                        if (i >>> 31) {
                            d = d ^ e,
                                h = h ^ t,
                                _ = _ ^ r,
                                p = p ^ n
                        }
                        i = i << 1 | o >>> 31,
                            o = o << 1 | a >>> 31,
                            a = a << 1 | l >>> 31,
                            l = l << 1;
                        g = n & 1;
                        n = n >>> 1 | r << 31,
                            r = r >>> 1 | t << 31,
                            t = t >>> 1 | e << 31,
                            e = e >>> 1;
                        if (g)
                            e = e ^ 0xe1000000
                    }
                    s = d,
                        u = h,
                        f = _,
                        c = p
                }

                function U(e) {
                    e = e | 0;
                    T = e
                }

                function B(e, t, r, s) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    s = s | 0;
                    n = e,
                        i = t,
                        o = r,
                        a = s
                }

                function k(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    s = e,
                        u = t,
                        f = r,
                        c = n
                }

                function G(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    l = e,
                        d = t,
                        h = r,
                        _ = n
                }

                function q(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    p = e,
                        E = t,
                        g = r,
                        y = n
                }

                function F(e, t, r, n) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    n = n | 0;
                    _ = ~y & _ | y & n,
                        h = ~g & h | g & r,
                        d = ~E & d | E & t,
                        l = ~p & l | p & e
                }

                function W(e) {
                    e = e | 0;
                    if (e & 15)
                        return -1;
                    w[e | 0] = n >>> 24,
                        w[e | 1] = n >>> 16 & 255,
                        w[e | 2] = n >>> 8 & 255,
                        w[e | 3] = n & 255,
                        w[e | 4] = i >>> 24,
                        w[e | 5] = i >>> 16 & 255,
                        w[e | 6] = i >>> 8 & 255,
                        w[e | 7] = i & 255,
                        w[e | 8] = o >>> 24,
                        w[e | 9] = o >>> 16 & 255,
                        w[e | 10] = o >>> 8 & 255,
                        w[e | 11] = o & 255,
                        w[e | 12] = a >>> 24,
                        w[e | 13] = a >>> 16 & 255,
                        w[e | 14] = a >>> 8 & 255,
                        w[e | 15] = a & 255;
                    return 16
                }

                function j(e) {
                    e = e | 0;
                    if (e & 15)
                        return -1;
                    w[e | 0] = s >>> 24,
                        w[e | 1] = s >>> 16 & 255,
                        w[e | 2] = s >>> 8 & 255,
                        w[e | 3] = s & 255,
                        w[e | 4] = u >>> 24,
                        w[e | 5] = u >>> 16 & 255,
                        w[e | 6] = u >>> 8 & 255,
                        w[e | 7] = u & 255,
                        w[e | 8] = f >>> 24,
                        w[e | 9] = f >>> 16 & 255,
                        w[e | 10] = f >>> 8 & 255,
                        w[e | 11] = f & 255,
                        w[e | 12] = c >>> 24,
                        w[e | 13] = c >>> 16 & 255,
                        w[e | 14] = c >>> 8 & 255,
                        w[e | 15] = c & 255;
                    return 16
                }

                function K() {
                    O(0, 0, 0, 0);
                    m = n,
                        v = i,
                        S = o,
                        A = a
                }

                function H(e, t, r) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    var s = 0;
                    if (t & 15)
                        return -1;
                    while ((r | 0) >= 16) {
                        V[e & 7](w[t | 0] << 24 | w[t | 1] << 16 | w[t | 2] << 8 | w[t | 3], w[t | 4] << 24 | w[t | 5] << 16 | w[t | 6] << 8 | w[t | 7], w[t | 8] << 24 | w[t | 9] << 16 | w[t | 10] << 8 | w[t | 11], w[t | 12] << 24 | w[t | 13] << 16 | w[t | 14] << 8 | w[t | 15]);
                        w[t | 0] = n >>> 24,
                            w[t | 1] = n >>> 16 & 255,
                            w[t | 2] = n >>> 8 & 255,
                            w[t | 3] = n & 255,
                            w[t | 4] = i >>> 24,
                            w[t | 5] = i >>> 16 & 255,
                            w[t | 6] = i >>> 8 & 255,
                            w[t | 7] = i & 255,
                            w[t | 8] = o >>> 24,
                            w[t | 9] = o >>> 16 & 255,
                            w[t | 10] = o >>> 8 & 255,
                            w[t | 11] = o & 255,
                            w[t | 12] = a >>> 24,
                            w[t | 13] = a >>> 16 & 255,
                            w[t | 14] = a >>> 8 & 255,
                            w[t | 15] = a & 255;
                        s = s + 16 | 0,
                            t = t + 16 | 0,
                            r = r - 16 | 0
                    }
                    return s | 0
                }

                function Y(e, t, r) {
                    e = e | 0;
                    t = t | 0;
                    r = r | 0;
                    var n = 0;
                    if (t & 15)
                        return -1;
                    while ((r | 0) >= 16) {
                        J[e & 1](w[t | 0] << 24 | w[t | 1] << 16 | w[t | 2] << 8 | w[t | 3], w[t | 4] << 24 | w[t | 5] << 16 | w[t | 6] << 8 | w[t | 7], w[t | 8] << 24 | w[t | 9] << 16 | w[t | 10] << 8 | w[t | 11], w[t | 12] << 24 | w[t | 13] << 16 | w[t | 14] << 8 | w[t | 15]);
                        n = n + 16 | 0,
                            t = t + 16 | 0,
                            r = r - 16 | 0
                    }
                    return n | 0
                }

                var V = [O, I, R, N, D, x, L, M];
                var J = [R, P];
                return {
                    set_rounds: U,
                    set_state: B,
                    set_iv: k,
                    set_nonce: G,
                    set_mask: q,
                    set_counter: F,
                    get_state: W,
                    get_iv: j,
                    gcm_init: K,
                    cipher: H,
                    mac: Y
                }
            }({
                Uint8Array: Uint8Array,
                Uint32Array: Uint32Array
            }, e, t);
            return f.set_key = function (e, t, n, o, a, u, c, l, d) {
                var h = r.subarray(0, 60)
                    , _ = r.subarray(256, 316);
                h.set([t, n, o, a, u, c, l, d]);
                for (var p = e, E = 1; p < 4 * e + 28; p++) {
                    var g = h[p - 1];
                    (p % e == 0 || 8 === e && p % e == 4) && (g = i[g >>> 24] << 24 ^ i[g >>> 16 & 255] << 16 ^ i[g >>> 8 & 255] << 8 ^ i[255 & g]),
                    p % e == 0 && (g = g << 8 ^ g >>> 24 ^ E << 24,
                        E = E << 1 ^ (128 & E ? 27 : 0)),
                        h[p] = h[p - e] ^ g
                }
                for (var y = 0; y < p; y += 4)
                    for (var m = 0; m < 4; m++)
                        g = h[p - (4 + y) + (4 - m) % 4],
                            _[y + m] = y < 4 || y >= p - 4 ? g : s[0][i[g >>> 24]] ^ s[1][i[g >>> 16 & 255]] ^ s[2][i[g >>> 8 & 255]] ^ s[3][i[255 & g]];
                f.set_rounds(e + 5)
            }
                ,
                f
        };
        return f.ENC = {
            ECB: 0,
            CBC: 2,
            CFB: 4,
            OFB: 6,
            CTR: 7
        },
            f.DEC = {
                ECB: 1,
                CBC: 3,
                CFB: 5,
                OFB: 6,
                CTR: 7
            },
            f.MAC = {
                CBC: 0,
                GCM: 1
            },
            f.HEAP_DATA = 16384,
            f
    }
)()
    , A = new Uint8Array(1048576)
    , T = (() => S(null, A.buffer))();


class C {
    constructor(e, t, r, n, i) {
        this.nonce = null,
            this.counter = 0,
            this.counterSize = 0,
            this.heap = E(Uint8Array, n).subarray(S.HEAP_DATA),
            this.asm = i || S(null, this.heap.buffer),
            this.mode = null,
            this.key = null,
            this.AES_reset(e, t, r)
    }

    AES_set_key(e) {
        if (void 0 !== e) {
            if (!_(e))
                throw new TypeError("unexpected key type");
            var t = e.length;
            if (16 !== t && 24 !== t && 32 !== t)
                throw new m("illegal key size");
            var r = new DataView(e.buffer, e.byteOffset, e.byteLength);
            this.asm.set_key(t >> 2, r.getUint32(0), r.getUint32(4), r.getUint32(8), r.getUint32(12), t > 16 ? r.getUint32(16) : 0, t > 16 ? r.getUint32(20) : 0, t > 24 ? r.getUint32(24) : 0, t > 24 ? r.getUint32(28) : 0),
                this.key = e
        } else if (!this.key)
            throw new Error("key is required")
    }

    AES_CTR_set_options(e, t, r) {
        if (void 0 !== r) {
            if (r < 8 || r > 48)
                throw new m("illegal counter size");
            this.counterSize = r;
            var n = Math.pow(2, r) - 1;
            this.asm.set_mask(0, 0, n / 4294967296 | 0, 0 | n)
        } else
            this.counterSize = r = 48,
                this.asm.set_mask(0, 0, 65535, 4294967295);
        if (void 0 === e)
            throw new Error("nonce is required");
        if (!_(e))
            throw new TypeError("unexpected nonce type");
        var i = e.length;
        if (!i || i > 16)
            throw new m("illegal nonce size");
        this.nonce = e;
        var o = new DataView(new ArrayBuffer(16));
        if (new Uint8Array(o.buffer).set(e),
            this.asm.set_nonce(o.getUint32(0), o.getUint32(4), o.getUint32(8), o.getUint32(12)),
        void 0 !== t) {
            if (!l(t))
                throw new TypeError("unexpected counter type");
            if (t < 0 || t >= Math.pow(2, r))
                throw new m("illegal counter value");
            this.counter = t,
                this.asm.set_counter(0, 0, t / 4294967296 | 0, 0 | t)
        } else
            this.counter = 0
    }

    AES_set_iv(e) {
        if (void 0 !== e) {
            if (!_(e))
                throw new TypeError("unexpected iv type");
            if (16 !== e.length)
                throw new m("illegal iv size");
            var t = new DataView(e.buffer, e.byteOffset, e.byteLength);
            this.iv = e,
                this.asm.set_iv(t.getUint32(0), t.getUint32(4), t.getUint32(8), t.getUint32(12))
        } else
            this.iv = null,
                this.asm.set_iv(0, 0, 0, 0)
    }

    AES_set_padding(e) {
        this.padding = void 0 === e || !!e
    }

    AES_reset(e, t, r) {
        return this.result = null,
            this.pos = 0,
            this.len = 0,
            this.AES_set_key(e),
            this.AES_set_iv(t),
            this.AES_set_padding(r),
            this
    }

    AES_Encrypt_process(e) {
        if (!_(e))
            throw new TypeError("data isn't of expected type");
        for (var t = this.asm, r = this.heap, n = S.ENC[this.mode], i = S.HEAP_DATA, o = this.pos, a = this.len, s = 0, u = e.length || 0, f = 0, c = 0, l = new Uint8Array(a + u & -16); u > 0;)
            a += c = g(r, o + a, e, s, u),
                s += c,
                u -= c,
            (c = t.cipher(n, i + o, a)) && l.set(r.subarray(o, o + c), f),
                f += c,
                c < a ? (o += c,
                    a -= c) : (o = 0,
                    a = 0);
        return this.result = l,
            this.pos = o,
            this.len = a,
            this
    }

    AES_Encrypt_finish(e) {
        var t = null
            , r = 0;
        void 0 !== e && (r = (t = this.AES_Encrypt_process(e).result).length);
        var n = this.asm
            , i = this.heap
            , o = S.ENC[this.mode]
            , a = S.HEAP_DATA
            , s = this.pos
            , u = this.len
            , f = 16 - u % 16
            , c = u;
        if (this.hasOwnProperty("padding")) {
            if (this.padding) {
                for (var l = 0; l < f; ++l)
                    i[s + u + l] = f;
                c = u += f
            } else if (u % 16)
                throw new m("data length must be a multiple of the block size")
        } else
            u += f;
        var d = new Uint8Array(r + c);
        return r && d.set(t),
        u && n.cipher(o, a + s, u),
        c && d.set(i.subarray(s, s + c), r),
            this.result = d,
            this.pos = 0,
            this.len = 0,
            this
    }

    AES_Decrypt_process(e) {
        if (!_(e))
            throw new TypeError("data isn't of expected type");
        var t = this.asm
            , r = this.heap//待定
            , n = S.DEC[this.mode]
            , i = S.HEAP_DATA
            , o = this.pos
            , a = this.len
            , s = 0
            , u = e.length || 0
            , f = 0
            , c = a + u & -16
            , l = 0
            , d = 0;
        this.padding && (c -= l = a + u - c || 16);
        for (var h = new Uint8Array(c); u > 0;)
            a += d = g(r, o + a, e, s, u),
                s += d,
                u -= d,
            (d = t.cipher(n, i + o, a - (u ? 0 : l))) && h.set(r.subarray(o, o + d), f),
                f += d,
                d < a ? (o += d,
                    a -= d) : (o = 0,
                    a = 0);
        return this.result = h,
            this.pos = o,
            this.len = a,
            this
    }

    AES_Decrypt_finish(e) {
        var t = null
            , r = 0;
        void 0 !== e && (r = (t = this.AES_Decrypt_process(e).result).length);
        var n = this.asm
            , i = this.heap
            , o = S.DEC[this.mode]
            , a = S.HEAP_DATA
            , s = this.pos
            , u = this.len
            , f = u;
        if (u > 0) {
            if (u % 16) {
                if (this.hasOwnProperty("padding"))
                    throw new m("data length must be a multiple of the block size");
                u += 16 - u % 16
            }
            if (n.cipher(o, a + s, u),
            this.hasOwnProperty("padding") && this.padding) {
                var c = i[s + f - 1];
                if (c < 1 || c > 16 || c > f)
                    throw new v("bad padding");
                for (var l = 0, d = c; d > 1; d--)
                    l |= c ^ i[s + f - d];
                if (l)
                    throw new v("bad padding");
                f -= c
            }
        }
        var h = new Uint8Array(r + f);
        return r > 0 && h.set(t),
        f > 0 && h.set(i.subarray(s, s + f), r),
            this.result = h,
            this.pos = 0,
            this.len = 0,
            this
    }
}

var w = (() => {
        class e extends C {
            constructor(e) {
                super(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], arguments.length > 3 ? arguments[3] : void 0, arguments.length > 4 ? arguments[4] : void 0),
                    this.mode = "CBC",
                    this.BLOCK_SIZE = 16
            }

            encrypt(e) {
                return this.AES_Encrypt_finish(e)
            }

            decrypt(e) {
                return this.AES_Decrypt_finish(e)
            }
        }

        return e.encrypt = I,
            e.decrypt = R,
            e
    }
)();

class b extends w {
    constructor(e, t, r, n, i) {
        super(e, t, r, n, i)
    }

    reset(e) {
        return this.AES_reset(e, null, !0)
    }

    process(e) {
        return this.AES_Encrypt_process(e)
    }

    finish(e) {
        return this.AES_Encrypt_finish(e)
    }
}

class O extends w {
    constructor(e, t, r, n, i) {
        super(e, t, r, n, i)
    }

    reset(e) {
        return this.AES_reset(e, null, !0)
    }

    process(e) {
        return this.AES_Decrypt_process(e)
    }

    finish(e) {
        return this.AES_Decrypt_finish(e)
    }
}

function I(e, t, r, n) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new w(t, n, r, A, T).encrypt(e).result
}

function R(e, t, r, n) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new w(t, n, r, A, T).decrypt(e).result
}

var N = 65279
    , D = 0xffffffffffff0
    , x = (() => {
        class e extends C {
            constructor(e, t, r, n, i, o, a) {
                super(e, void 0, void 0, o, a),
                    this.tagSize = 16,
                    this.lengthSize = 4,
                    this.nonce = null,
                    this.adata = null,
                    this.iv = null,
                    this.counter = 1,
                    this.dataLength = -1,
                    this.AES_CCM_reset(e, void 0, t, r, void 0, void 0, n, i),
                    this.mode = "CCM",
                    this.BLOCK_SIZE = 16
            }

            encrypt(e) {
                return this.AES_CCM_encrypt(e)
            }

            decrypt(e) {
                return this.AES_CCM_decrypt(e)
            }

            AES_CCM_reset(e, t, r, n, i, o, a, s) {
                if (this.AES_reset(e, t),
                void 0 !== a) {
                    if (!l(a))
                        throw new TypeError("tagSize must be a number");
                    if (a < 4 || a > 16 || 1 & a)
                        throw new m("illegal tagSize value");
                    this.tagSize = a
                } else
                    this.tagSize = 16;
                if (void 0 === r)
                    throw new Error("nonce is required");
                if (!_(r))
                    throw new TypeError("unexpected nonce type");
                if (r.length < 8 || r.length > 13)
                    throw new m("illegal nonce length");
                if (this.nonce = r,
                    this.lengthSize = o = 15 - r.length,
                    (r = new Uint8Array(r.length + 1))[0] = o - 1,
                    r.set(this.nonce, 1),
                void 0 !== t) {
                    if (void 0 !== n)
                        throw new y("you should specify either adata or iv, not both");
                    if (!l(i))
                        throw new TypeError("counter must be a number");
                    if (i < 1 || i >= Math.pow(2, 8 * o) - 16)
                        throw new m("illegal counter value");
                    this.counter = i
                } else if (void 0 !== n && null !== n) {
                    if (!_(n))
                        throw new TypeError("unexpected adata type");
                    if (n.length > N)
                        throw new m("illegal adata length");
                    if (!l(s))
                        throw new TypeError("dataLength must be a number");
                    if (s < 0 || s > D || s > Math.pow(2, 8 * o) - 16)
                        throw new m("illegal dataLength value");
                    this.adata = n.length ? n : null,
                        this.dataLength = s,
                        this.counter = i = 1,
                        this.AES_CCM_calculate_iv(),
                        t = this.iv
                } else {
                    if (!l(s))
                        throw new TypeError("dataLength must be a number");
                    if (s < 0 || s > D || s > Math.pow(2, 8 * o) - 16)
                        throw new m("illegal dataLength value");
                    this.adata = null,
                        this.dataLength = s,
                        this.counter = i = 1,
                        this.AES_CCM_calculate_iv(),
                        t = this.iv
                }
                return this.AES_set_iv(t),
                    this.AES_CTR_set_options(r, i, 8 * o),
                    this
            }

            AES_CCM_calculate_iv() {
                var e = this.nonce
                    , t = this.adata
                    , r = this.tagSize
                    , n = this.lengthSize
                    , i = this.dataLength
                    , o = new Uint8Array(16 + (t ? 2 + t.length : 0));
                o[0] = (t ? 64 : 0) | r - 2 << 2 | n - 1,
                    o.set(e, 1),
                n > 6 && (o[9] = i / 4294967296 >>> 16 & 15),
                n > 5 && (o[10] = i / 4294967296 >>> 8 & 255),
                n > 4 && (o[11] = i / 4294967296 & 255),
                n > 3 && (o[12] = i >>> 24),
                n > 2 && (o[13] = i >>> 16 & 255),
                    o[14] = i >>> 8 & 255,
                    o[15] = 255 & i,
                t && (o[16] = t.length >>> 8 & 255,
                    o[17] = 255 & t.length,
                    o.set(t, 18)),
                    this._cbc_mac_process(o),
                    this.asm.get_state(S.HEAP_DATA),
                    this.iv = new Uint8Array(this.heap.subarray(0, 16))
            }

            _cbc_mac_process(e) {
                for (var t = this.heap, r = this.asm, n = 0, i = e.length || 0, o = 0; i > 0;) {
                    for (o = g(t, 0, e, n, i); 15 & o;)
                        t[o++] = 0;
                    n += o,
                        i -= o,
                        r.mac(S.MAC.CBC, S.HEAP_DATA, o)
                }
            }

            AES_CCM_decrypt(e) {
                this.dataLength = e.length || 0;
                var t = this.AES_CCM_Decrypt_process(e).result
                    , r = this.AES_CCM_Decrypt_finish().result
                    , n = new Uint8Array(t.length + r.length);
                return t.length && n.set(t),
                r.length && n.set(r, t.length),
                    this.result = n,
                    this
            }

            AES_CCM_encrypt(e) {
                this.dataLength = e.length || 0;
                var t = this.AES_CCM_Encrypt_process(e).result
                    , r = this.AES_CCM_Encrypt_finish().result
                    , n = new Uint8Array(t.length + r.length);
                return t.length && n.set(t),
                r.length && n.set(r, t.length),
                    this.result = n,
                    this
            }

            AES_CCM_Encrypt_process(e) {
                if (!_(e))
                    throw new TypeError("data isn't of expected type");
                var t = 0
                    , r = e.length || 0
                    , n = this.asm
                    , i = this.heap
                    , o = this.counter
                    , a = this.pos
                    , s = this.len
                    , u = 0
                    , f = s + r & -16
                    , c = 0;
                if ((o - 1 << 4) + s + r > D)
                    throw new RangeError("counter overflow");
                for (var l = new Uint8Array(f); r > 0;)
                    s += c = g(i, a + s, e, t, r),
                        t += c,
                        r -= c,
                        c = n.mac(S.MAC.CBC, S.HEAP_DATA + a, s),
                    (c = n.cipher(S.ENC.CTR, S.HEAP_DATA + a, c)) && l.set(i.subarray(a, a + c), u),
                        o += c >>> 4,
                        u += c,
                        c < s ? (a += c,
                            s -= c) : (a = 0,
                            s = 0);
                return this.result = l,
                    this.counter = o,
                    this.pos = a,
                    this.len = s,
                    this
            }

            AES_CCM_Encrypt_finish() {
                for (var e = this.asm, t = this.heap, r = this.tagSize, n = this.pos, i = this.len, o = new Uint8Array(i + r), a = i; 15 & a; a++)
                    t[n + a] = 0;
                return e.mac(S.MAC.CBC, S.HEAP_DATA + n, a),
                    e.cipher(S.ENC.CTR, S.HEAP_DATA + n, a),
                i && o.set(t.subarray(n, n + i)),
                    e.set_counter(0, 0, 0, 0),
                    e.get_iv(S.HEAP_DATA),
                    e.cipher(S.ENC.CTR, S.HEAP_DATA, 16),
                    o.set(t.subarray(0, r), i),
                    this.result = o,
                    this.counter = 1,
                    this.pos = 0,
                    this.len = 0,
                    this
            }

            AES_CCM_Decrypt_process(e) {
                if (!_(e))
                    throw new TypeError("data isn't of expected type");
                var t = 0
                    , r = e.length || 0
                    , n = this.asm
                    , i = this.heap
                    , o = this.counter
                    , a = this.tagSize
                    , s = this.pos
                    , u = this.len
                    , f = 0
                    , c = u + r > a ? u + r - a & -16 : 0
                    , l = u + r - c
                    , d = 0;
                if ((o - 1 << 4) + u + r > D)
                    throw new RangeError("counter overflow");
                for (var h = new Uint8Array(c); r > l;)
                    u += d = g(i, s + u, e, t, r - l),
                        t += d,
                        r -= d,
                        d = n.cipher(S.DEC.CTR, S.HEAP_DATA + s, d),
                    (d = n.mac(S.MAC.CBC, S.HEAP_DATA + s, d)) && h.set(i.subarray(s, s + d), f),
                        o += d >>> 4,
                        f += d,
                        s = 0,
                        u = 0;
                return r > 0 && (u += g(i, 0, e, t, r)),
                    this.result = h,
                    this.counter = o,
                    this.pos = s,
                    this.len = u,
                    this
            }

            AES_CCM_Decrypt_finish() {
                var e = this.asm
                    , t = this.heap
                    , r = this.tagSize
                    , n = this.pos
                    , i = this.len
                    , o = i - r;
                if (i < r)
                    throw new y("authentication tag not found");
                var a = new Uint8Array(o)
                    , s = new Uint8Array(t.subarray(n + o, n + i));
                e.cipher(S.DEC.CTR, S.HEAP_DATA + n, o + 15 & -16),
                    a.set(t.subarray(n, n + o));
                for (var u = o; 15 & u; u++)
                    t[n + u] = 0;
                e.mac(S.MAC.CBC, S.HEAP_DATA + n, u),
                    e.set_counter(0, 0, 0, 0),
                    e.get_iv(S.HEAP_DATA),
                    e.cipher(S.ENC.CTR, S.HEAP_DATA, 16);
                var f = 0;
                for (u = 0; u < r; ++u)
                    f |= s[u] ^ t[u];
                if (f)
                    throw new v("data integrity check failed");
                return this.result = a,
                    this.counter = 1,
                    this.pos = 0,
                    this.len = 0,
                    this
            }

            reset() {
            }
        }

        return e.encrypt = P,
            e.decrypt = U,
            e
    }
)();

class L extends x {
    constructor(e, t, r, n, i, o, a) {
        super(e, t, r, n, i, o, a)
    }

    process(e) {
        return this.AES_CCM_Encrypt_process(e)
    }

    finish() {
        return this.AES_CCM_Encrypt_finish()
    }
}

class M extends x {
    constructor(e, t, r, n, i, o, a) {
        super(e, t, r, n, i, o, a)
    }

    process(e) {
        return this.AES_CCM_Decrypt_process(e)
    }

    finish() {
        return this.AES_CCM_Decrypt_finish()
    }
}

function P(e, t, r, n, i) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    if (void 0 === r)
        throw new SyntaxError("nonce required");
    var o = e.length || 0;
    return new x(t, r, n, i, o, A, T).encrypt(e).result
}

function U(e, t, r, n, i) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    if (void 0 === r)
        throw new SyntaxError("nonce required");
    var o = e.length || 0;
    return new x(t, r, n, i = i || 16, o - i, A, T).decrypt(e).result
}

var B = (() => {
        class e extends C {
            constructor(e, t, r, n) {
                super(e, t, !0, r, n),
                    delete this.padding,
                    this.mode = "CFB",
                    this.BLOCK_SIZE = 16
            }

            encrypt(e) {
                return this.AES_Encrypt_finish(e)
            }

            decrypt(e) {
                return this.AES_Decrypt_finish(e)
            }
        }

        return e.encrypt = q,
            e.decrypt = F,
            e
    }
)();

class k extends B {
    constructor(e, t, r, n) {
        super(e, t, r, n)
    }

    reset(e, t, r) {
        return this.AES_reset(e, t, r)
    }

    process(e) {
        return this.AES_Encrypt_process(e)
    }

    finish(e) {
        return this.AES_Encrypt_finish(e)
    }
}

class G extends B {
    constructor(e, t, r, n) {
        super(e, t, r, n)
    }

    reset(e, t, r) {
        return this.AES_reset(e, t, r)
    }

    process(e) {
        return this.AES_Decrypt_process(e)
    }

    finish(e) {
        return this.AES_Decrypt_finish(e)
    }
}

function q(e, t, r) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new B(t, r, A, T).encrypt(e).result
}

function F(e, t, r) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new B(t, r, A, T).decrypt(e).result
}

var W = (() => {
        class e extends C {
            constructor(e, t, r) {
                super(e, void 0, !1, t, r),
                    this.mode = "ECB",
                    this.BLOCK_SIZE = 16
            }

            encrypt(e) {
                return this.AES_Encrypt_finish(e)
            }

            decrypt(e) {
                return this.AES_Decrypt_finish(e)
            }
        }

        return e.encrypt = z,
            e.decrypt = Q,
            e
    }
)();

class j extends W {
    constructor(e, t, r) {
        super(e, t, r)
    }

    reset(e) {
        return this.AES_reset(e, null, !0)
    }

    process(e) {
        return this.AES_Encrypt_process(e)
    }

    finish(e) {
        return this.AES_Encrypt_finish(e)
    }
}

class K extends W {
    constructor(e, t, r) {
        super(e, t, r)
    }

    reset(e) {
        return this.AES_reset(e, null, !0)
    }

    process(e) {
        return this.AES_Decrypt_process(e)
    }

    finish(e) {
        return this.AES_Decrypt_finish(e)
    }
}

function H(e) {
    const t = 128 & e[0];
    for (var r = 0; r < 15; r++)
        e[r] = e[r] << 1 ^ (128 & e[r + 1] ? 1 : 0);
    e[15] = e[15] << 1 ^ (t ? 135 : 0)
}

var Y = (() => {
        class e {
            constructor(e) {
                this.k = new W(e).encrypt(new Uint8Array(16)).result,
                    H(this.k),
                    this.cbc = new b(e, new Uint8Array(16), !1),
                    this.buffer = new Uint8Array(16),
                    this.bufferLength = 0,
                    this.result = null
            }

            process(e) {
                if (this.bufferLength + e.length > 16) {
                    this.cbc.process(this.buffer.subarray(0, this.bufferLength));
                    const t = (this.bufferLength + e.length - 1 & -16) - this.bufferLength;
                    this.cbc.process(e.subarray(0, t)),
                        this.buffer.set(e.subarray(t)),
                        this.bufferLength = e.length - t
                } else
                    this.buffer.set(e, this.bufferLength),
                        this.bufferLength += e.length;
                return this
            }

            finish() {
                if (16 !== this.bufferLength) {
                    this.buffer[this.bufferLength] = 128;
                    for (let e = this.bufferLength + 1; e < 16; e++)
                        this.buffer[e] = 0;
                    H(this.k)
                }
                for (let e = 0; e < 16; e++)
                    this.buffer[e] ^= this.k[e];
                return this.result = this.cbc.process(this.buffer).result,
                    this
            }
        }

        return e.bytes = V,
            e
    }
)();

function V(e, t) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new Y(t).process(e).finish().result
}

var J = (() => {
        class e extends C {
            constructor(e, t, r, n) {
                super(e, void 0, void 0, r, n),
                    this.reset(e, t),
                    this.AES_CTR_set_options(t),
                    delete this.padding,
                    this.mode = "CTR",
                    this.BLOCK_SIZE = 16
            }

            reset(e, t, r, n) {
                return this.AES_reset(e, void 0, void 0),
                    this.AES_CTR_set_options(t, r, n),
                    this
            }

            encrypt(e) {
                return this.AES_Encrypt_finish(e)
            }

            decrypt(e) {
                return this.AES_Encrypt_finish(e)
            }
        }

        return e.encrypt = X,
            e.decrypt = X,
            e
    }
)();

function X(e, t, r) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    if (void 0 === r)
        throw new SyntaxError("nonce required");
    return new J(t, r, A, T).encrypt(e).result
}

function z(e, t) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new W(t, A, T).encrypt(e).result
}

function Q(e, t) {
    if (void 0 === e)
        throw new SyntaxError("data required");
    if (void 0 === t)
        throw new SyntaxError("key required");
    return new W(t, A, T).decrypt(e).result
}


function run_decrypt(keys, page) {

    tbase64ToArrayBuffer = function (e) {
        var y = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        for (var t = function (e) {
            var t = String(e).replace(/=+$/, "")
                , r = "";
            if (t.length % 4 == 1)
                throw new Error('"atob" failed');
            for (var n = 0, i = void 0, o = void 0, a = 0; o = t.charAt(a++); ~o && (i = n % 4 ? 64 * i + o : o,
            n++ % 4) ? r += String.fromCharCode(255 & i >> (-2 * n & 6)) : 0)
                o = y.indexOf(o);
            return r
        }(e), r = t.length, n = new Uint8Array(r), i = 0; i < r; i++)
            n[i] = t.charCodeAt(i);
        return n.buffer
    }


    function oo() {
        return "object" == typeof t && "object" == typeof t.versions && void 0 !== t.versions.node
    }

    function aa1(e) {
        return e instanceof Uint8Array && (!oo() || !r.isBuffer(e))
    }

    function fo(e) {
        a_array = e,
            p_pos = 0
    }

    function sss(e) {
        return e instanceof ArrayBuffer
    }


    function creadUncompressedLength() {
        for (var e, t, r = 0, n = 0; n < 32 && p_pos < a_array.length;) {
            if (e = a_array[p_pos],
                p_pos += 1,
            (t = 127 & e) << n >>> n !== t)
                return -1;
            if (r |= t << n,
            e < 128)
                return r;
            n += 7
        }
        return -1
    }

    function nnn(e, t, r, n, i) {
        var o;
        for (o = 0; o < i; o++)
            r[n + o] = e[t + o]
    }

    function iii(e, t, r, n) {
        var i;
        for (i = 0; i < n; i++)
            e[t + i] = e[t - r + i]
    }

    cuncompressToBuffer = function (e) {
        for (var t, r, o, s, u = a_array, f = u.length, c = p_pos, l = 0; c < u.length;)
            if (t = u[c],
                c += 1,
            0 == (3 & t)) {
                if ((r = 1 + (t >>> 2)) > 60) {
                    if (c + 3 >= f)
                        return !1;
                    o = r - 60,
                        r = 1 + ((r = u[c] + (u[c + 1] << 8) + (u[c + 2] << 16) + (u[c + 3] << 24)) & a[o]),
                        c += o
                }
                if (c + r > f)
                    return !1;
                nnn(u, c, e, l, r),
                    c += r,
                    l += r
            } else {
                switch (3 & t) {
                    case 1:
                        r = 4 + (t >>> 2 & 7),
                            s = u[c] + (t >>> 5 << 8),
                            c += 1;
                        break;
                    case 2:
                        if (c + 1 >= f)
                            return !1;
                        r = 1 + (t >>> 2),
                            s = u[c] + (u[c + 1] << 8),
                            c += 2;
                        break;
                    case 3:
                        if (c + 3 >= f)
                            return !1;
                        r = 1 + (t >>> 2),
                            s = u[c] + (u[c + 1] << 8) + (u[c + 2] << 16) + (u[c + 3] << 24),
                            c += 4
                }
                if (0 === s || s > l)
                    return !1;
                iii(e, l, s, r),
                    l += r
            }
        return !0
    }


    function Runcompress(e) {
        var t = !1
            , n = !1;
        aa1(e) ? t = !0 : sss(e) && (n = !0,
            e = new Uint8Array(e));
        var i, o, c = new fo(e), d = creadUncompressedLength();
        if (i = new Uint8Array(d),
            !cuncompressToBuffer(i))
            throw new Error("Invalid Snappy bitstream")
        return i
    }

    function uu22(e) {
        this.buf = e,
            this.pos = 0,
            this.len = e.length
    }


    i.create = function (e) {
        return new uu22(e);
    }
    s.HTTPResponse = function e(e) {
        if (this.header = [],
            e)
            for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                null != e[t[r]] && (this[t[r]] = e[t[r]])
    }

    s.uint32 = function (a) {
        if (e = (127 & a.buf[a.pos]) >>> 0,
        a.buf[a.pos++] < 128)
            return e;
        if (e = (e | (127 & a.buf[a.pos]) << 7) >>> 0,
        a.buf[a.pos++] < 128)
            return e;
        if (e = (e | (127 & a.buf[a.pos]) << 14) >>> 0,
        a.buf[a.pos++] < 128)
            return e;
        if (e = (e | (127 & a.buf[a.pos]) << 21) >>> 0,
        a.buf[a.pos++] < 128)
            return e;
        if (e = (e | (15 & a.buf[a.pos]) << 28) >>> 0,
        a.buf[a.pos++] < 128)
            return e;
        if ((a.pos += 5) > a.len)
            throw a.pos = a.len,
                s(this, 10);
        return e

    }
    s.HTTPHeader = function e(e) {
        if (e)
            for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                null != e[t[r]] && (this[t[r]] = e[t[r]])
    }


    thisbytes = function (a) {
        var e = s.uint32(a)
            , t = a.pos
            , r = a.pos + e;
        if (r > a.len)
            throw s(this, e);
        return a.pos += e,
            Array.isArray(a.buf) ? a.buf.slice(t, r) : t === r ? new a.buf.constructor(0) : a.buf.subarray(t, r)
    }

    aread = function(e, t, r) {
        if (r - t < 1)
            return "";
        for (var n, i = null, o = [], a = 0; t < r; )
            (n = e[t++]) < 128 ? o[a++] = n : n > 191 && n < 224 ? o[a++] = (31 & n) << 6 | 63 & e[t++] : n > 239 && n < 365 ? (n = ((7 & n) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536,
                o[a++] = 55296 + (n >> 10),
                o[a++] = 56320 + (1023 & n)) : o[a++] = (15 & n) << 12 | (63 & e[t++]) << 6 | 63 & e[t++],
            a > 8191 && ((i || (i = [])).push(String.fromCharCode.apply(String, o)),
                a = 0);
        return i ? (a && i.push(String.fromCharCode.apply(String, o.slice(0, a))),
            i.join("")) : String.fromCharCode.apply(String, o.slice(0, a))
    }

    s.string = function (E) {
        var e = thisbytes(E);
        return aread(e, 0, e.length)
    }
    s.HTTPHeaderdecode = function (e, t) {
        // e instanceof uu22 || (e = i.create(e));
        for (var r = void 0 === t ? e.len : e.pos + t, n = new s.HTTPHeader; e.pos < r;) {
            var o = s.uint32(e);
            switch (o >>> 3) {
                case 1:
                    n.key = s.string(e);
                    break;
                case 2:
                    n.value = s.string(e);
                    break;
                default:
                    e.skipType(7 & o)
            }
        }
        return n
    }

    aHTTPResponsedecode = function (e, t) {
        e instanceof i || (e = i.create(e));
        for (var r = void 0 === t ? e.len : e.pos + t, n = new s.HTTPResponse; e.pos < r;) {
            var o = s.uint32(e);
            switch (o >>> 3) {
                case 1:
                    n.statusCode = s.uint32(e);
                    break;
                case 2:
                    n.header && n.header.length || (n.header = []),
                        n.header.push(s.HTTPHeaderdecode(e, s.uint32(e)));
                    break;
                case 3:
                    n.bodyBuffer = e.bytes();
                    break;
                case 4:
                    n.bodyString = s.string(e);
                    break;
                default:
                    e.skipType(7 & o)
            }
        }
        return n
    }
    var i_key = new Uint8Array(tbase64ToArrayBuffer(keys))
    var o11 = w.decrypt(new Uint8Array(page), i_key, void 0, i_key);
    E1 = aHTTPResponsedecode(o11)
    console.log(E1)


}

